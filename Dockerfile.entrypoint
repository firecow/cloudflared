#!/bin/sh

set -e

# function that prints info message, if TUNNEL_LOGLEVEL is DEBUG or INFO
printInfo() {
  tunnel_loglevel=${TUNNEL_LOGLEVEL}
  if [ "${tunnel_loglevel}" != 'info' ] && [ "${tunnel_loglevel}" != 'debug' ]; then return 0; fi
  formattedDate=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
  echo "$formattedDate INF ${1}"
}

# Prevent message about missing config file.
if [ ! -f /etc/cloudflared/config.yml ]; then
  printInfo "/etc/cloudflared/config.yml not found autogenerating one"
  echo "---" >/etc/cloudflared/config.yml
fi

if [ -n "${TUNNEL_NAME}" ]; then
  echo >&2 "You cannot use TUNNEL_NAME it's derived from TUNNEL_HOSTNAME" && exit 1
fi

if [ -n "${TUNNEL_FORCE_PROVISIONING_DNS}" ]; then
  echo >&2 "You cannot use TUNNEL_FORCE_PROVISIONING_DNS it's determined via route dns command" && exit 1
fi

if [ -z "${TUNNEL_HOSTNAME}" ]; then
  echo >&2 "You need to specify TUNNEL_HOSTNAME" && exit 1
fi

if [ -z "${TUNNEL_URL}" ] && [ -z "${TUNNEL_UNIX_SOCKET}" ]; then
  echo >&2 "You need to specify TUNNEL_URL or TUNNEL_UNIX_SOCKET" && exit 1
fi

export TUNNEL_FORCE_PROVISIONING_DNS='false'
derived_tunnel_name=$(echo "$TUNNEL_HOSTNAME" | sed "s,^.*://,,g")

export TUNNEL_NAME="${TUNNEL_NAME:-$derived_tunnel_name}"

existing_tunnels_json=$(cloudflared --loglevel 'error' tunnel list --name "${TUNNEL_NAME}" --output json)
if [ "${existing_tunnels_json}" != "[]" ]; then
  printInfo "Deleting existing named tunnel '${TUNNEL_NAME}'"
  cloudflared --loglevel 'error' tunnel delete "${TUNNEL_NAME}"
else
  printInfo "No existing named tunnel found"
fi
printInfo "Creating new named tunnel '${TUNNEL_NAME}'"
cloudflared --loglevel 'error' tunnel create "${TUNNEL_NAME}" 1>/dev/null
printInfo "Routing dns from '${TUNNEL_NAME}' to tunnel"
cloudflared --loglevel 'error' tunnel route dns --overwrite-dns "${TUNNEL_NAME}" "${derived_tunnel_name}"
unset TUNNEL_HOSTNAME

exec "$@"
